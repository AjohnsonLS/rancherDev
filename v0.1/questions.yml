categories:
- Monitoring
questions:
# Docker image configurations
- variable: defaultImage
  default: true
  description: "Use default Docker image"
  label: Use Default Image
  type: boolean
  show_subquestion_if: false
  group: "Container Images"
  subquestions:
  - variable: server.image.repository
    default: "ranchercharts/prom-prometheus"
    description: "Prometheus image name"
    type: string
    label: Prometheus Image Name
  - variable: server.image.tag
    default: "v2.11.1"
    description: "Prometheus image tag"
    type: string
    label: Prometheus Image Tag
  - variable: alertmanager.image.repository
    default: "ranchercharts/prom-alertmanager"
    description: "Alertmanager image name"
    type: string
    label: Alertmanager Image Name
    show_if: "alertmanager.enabled=true"
  - variable: alertmanager.image.tag
    default: "v0.18.0"
    description: "Alertmanager image tag"
    type: string
    label: Alertmanager Image Tag
    show_if: "alertmanager.enabled=true"
  - variable: nodeExporter.image.repository
    default: "ranchercharts/prom-node-exporter"
    description: "Node exporter image name"
    type: string
    label: NodeExporter Image Name
  - variable: nodeExporter.image.tag
    default: "v0.18.0"
    description: "Node exporter image tag"
    type: string
    label: NodeExporter Image Tag
  - variable: pushgateway.image.repository
    default: "ranchercharts/prom-pushgateway"
    description: "Pushgateway image name"
    type: string
    label: Pushgateway Image Name
  - variable: pushgateway.image.tag
    default: "v0.8.0"
    description: "Pushgateway image tag"
    type: string
    label: Pushgateway Image Tag
  - variable: kubeStateMetrics.image.repository
    default: "ranchercharts/coreos-kube-state-metrics"
    description: "Kube-state-metrics image name"
    type: string
    label: KubeStateMetrics Image Name
  - variable: kubeStateMetrics.image.tag
    default: "v1.7.2"
    description: "Kube-state-metrics image tag"
    type: string
    label: KubeStateMetrics Image Tag
  - variable: grafana.image.repository
    default: "ranchercharts/grafana-grafana"
    description: "Grafana image name"
    type: string
    label: Grafana Image Name
  - variable: grafana.image.tag
    default: "6.3.4"
    description: "Grafana image tag"
    type: string
    label: Grafana Image Tag
  - variable: grafana.sidecar.image
    default: "ranchercharts/kiwigrid-k8s-sidecar:0.1.20"
    description: "Sidecar image name"
    type: string
    label: Sidecar Image Name
  - variable: grafana.downloadDashboardsImage.repository
    default: "ranchercharts/appropriate-curl"
    description: "Grafana Download Dashboard image name"
    type: string
    label: Grafana Download Dashboard Image Name
  - variable: grafana.downloadDashboardsImage.tag
    default: "latest"
    description: "Grafana Download Dashboard image tag"
    type: string
    label: Grafana Download Dashboard Image Tag
# server configurations
- variable: server.ingress.enabled
  default: false
  description: "Expose prometheus using Layer 7 Load Balancer - ingress"
  type: boolean
  group: "Prometheus Server"
  label: Expose Prometheus using Layer 7 Load Balancer
  show_subquestion_if: true
  required: true
  subquestions:
  - variable: server.ingress.hosts[0]
    default: "xip.io"
    description: "Prometheus server ingress hostname"
    type: hostname
    required: true
    label: Hostname
- variable: server.service.type
  default: "NodePort"
  description: "Server service type"
  group: "Prometheus Server"
  type: enum
  options:
    - "ClusterIP"
    - "NodePort"
  required: true
  label: Prometheus Service Type
  show_subquestion_if: "NodePort"
  subquestions:
  - variable: server.service.nodePort
    default: ""
    description: "NodePort http port(to set explicitly, choose port between 30000-32767)"
    type: int
    min: 30000
    max: 32767
    label: Prometheus NodePort Http Port
    show_if: "server.ingress.enabled=false&&server.service.type=NodePort"
- variable: server.persistentVolume.enabled
  default: false
  description: "If true, prometheus will create a persistent volume claim"
  type: boolean
  group: "Prometheus Server"
  required: true
  label: Create Persistent Volume for Prometheus
  show_subquestion_if: true
  subquestions:
  - variable: server.persistentVolume.size
    default: "8Gi"
    description: "Prometheus data persistent volume size"
    type: string
    label: Prometheus Persistent Volume Size
  - variable: server.persistentVolume.storageClass
    default: ""
    description: "Prometheus data persistent volume storageClass, if not set use default StorageClass"
    type: storageclass
    label: Prometheus Persistent Volume StorageClass
  - variable: server.persistentVolume.existingClaim
    default: ""
    description: "If not empty, uses the specified existing PVC instead of creating new one"
    type: pvc
    label: Existing Persistent Volume Claim for Prometheus

    
# Satellite Configuration
- variable: lighstep.satelliteKey
  default: ""
  description: "Enter your Lighstep satellite key."
  type: string
  label: Lightstep satellite key
  group: "Satellite Configuration"
  required: true
  show_if: "lightstep.satelliteSecret="
- variable: lighstep.satelliteSecret
  default: ""
  description: "If set, use an existing secret that contains your satellite API key."
  type: secret
  label: Select existing secret with satellite API key
  group: "Satellite Configuration"
  show_if: "lighstep.satelliteKey="
- variable: lighstep.satelliteSecretKey
  default: ""
  description: "If set, use an existing secret that contains your satellite key.  The secret key must be called 'satelliteKey'"
  type: string
  label: Enter the name of the key that contains the satellite API key.
  group: "Satellite Configuration"
  show_if: "lighstep.satelliteKey="